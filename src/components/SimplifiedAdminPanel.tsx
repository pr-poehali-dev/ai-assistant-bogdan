import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import Icon from '@/components/ui/icon';
import { Card } from '@/components/ui/card';

type AIModel = 'gemini' | 'llama' | 'gigachat' | 'phi' | 'qwen' | 'mistral';

interface APIConfig {
  gemini: { key: string; enabled: boolean };
  llama: { key: string; enabled: boolean };
  gigachat: { key: string; enabled: boolean };
  phi: { key: string; enabled: boolean };
  qwen: { key: string; enabled: boolean };
  mistral: { key: string; enabled: boolean };
}

interface SimplifiedAdminPanelProps {
  apiConfig: APIConfig;
  onAPIKeyChange: (model: AIModel, key: string) => void;
  onToggleModel: (model: AIModel, enabled: boolean) => void;
  onSaveSettings: () => void;
}

export default function SimplifiedAdminPanel({
  apiConfig,
  onAPIKeyChange,
  onToggleModel,
  onSaveSettings,
}: SimplifiedAdminPanelProps) {
  const [masterKey, setMasterKey] = useState(() => {
    const firstKey = Object.values(apiConfig).find(c => c.key)?.key || '';
    return firstKey;
  });
  const [showKey, setShowKey] = useState(false);

  const models: { id: AIModel; name: string; icon: string; description: string; color: string }[] = [
    { id: 'gemini', name: 'Gemini', icon: 'Zap', description: '–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á', color: 'from-blue-500 to-blue-600' },
    { id: 'llama', name: 'Llama', icon: 'Target', description: '–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤', color: 'from-purple-500 to-purple-600' },
    { id: 'gigachat', name: 'GigaChat', icon: 'Lightbulb', description: '–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', color: 'from-green-500 to-green-600' },
    { id: 'phi', name: 'Phi', icon: 'Brain', description: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã', color: 'from-indigo-500 to-indigo-600' },
    { id: 'qwen', name: 'Qwen', icon: 'Cpu', description: '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞', color: 'from-orange-500 to-orange-600' },
    { id: 'mistral', name: 'Mistral', icon: 'Rocket', description: '–ë—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ', color: 'from-rose-500 to-rose-600' },
  ];

  const handleSave = () => {
    models.forEach(model => {
      if (apiConfig[model.id].enabled) {
        onAPIKeyChange(model.id, masterKey);
      }
    });
    onSaveSettings();
  };

  const enabledCount = models.filter(m => apiConfig[m.id].enabled).length;

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 p-4 sm:p-8">
      <div className="max-w-4xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-slate-800 mb-2">üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API</h1>
          <p className="text-slate-600">–û–¥–∏–Ω –∫–ª—é—á –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –ò–ò. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –ª—É—á—à—É—é –º–æ–¥–µ–ª—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</p>
        </div>

        <Card className="p-6 mb-6 bg-white/80 backdrop-blur-sm shadow-lg">
          <div className="space-y-4">
            <div>
              <Label htmlFor="master-key" className="text-base font-semibold text-slate-700">
                API –∫–ª—é—á (OpenRouter, OpenAI –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä)
              </Label>
              <div className="flex gap-2 mt-2">
                <Input
                  id="master-key"
                  type={showKey ? 'text' : 'password'}
                  value={masterKey}
                  onChange={(e) => setMasterKey(e.target.value)}
                  placeholder="sk-..."
                  className="flex-1 h-12 text-base"
                />
                <Button
                  variant="outline"
                  size="icon"
                  onClick={() => setShowKey(!showKey)}
                  className="h-12 w-12"
                >
                  <Icon name={showKey ? 'EyeOff' : 'Eye'} size={20} />
                </Button>
              </div>
              <p className="text-sm text-slate-500 mt-2">
                –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ <a href="https://openrouter.ai/keys" target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:underline">OpenRouter.ai</a> –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–π –∫–ª—é—á OpenAI
              </p>
            </div>
          </div>
        </Card>

        <div className="mb-6">
          <h2 className="text-xl font-bold text-slate-800 mb-4">
            –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ ({enabledCount} –∏–∑ {models.length})
          </h2>
          <p className="text-slate-600 text-sm mb-4">
            –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª–∏, –º–µ–∂–¥—É –∫–æ—Ç–æ—Ä—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.
          </p>
          <div className="grid gap-3">
            {models.map(model => {
              const modelConfig = apiConfig[model.id] || { key: '', enabled: true };
              return (
                <Card
                  key={model.id}
                  className={`p-4 cursor-pointer transition-all ${
                    modelConfig.enabled
                      ? 'bg-gradient-to-r ' + model.color + ' text-white shadow-lg'
                      : 'bg-white/60 hover:bg-white/80'
                  }`}
                  onClick={() => onToggleModel(model.id, !modelConfig.enabled)}
                >
                  <div className="flex items-center gap-4">
                    <div className={`p-3 rounded-xl ${modelConfig.enabled ? 'bg-white/20' : 'bg-slate-100'}`}>
                      <Icon name={model.icon as any} size={24} className={modelConfig.enabled ? 'text-white' : 'text-slate-600'} />
                    </div>
                    <div className="flex-1">
                      <h3 className={`font-bold text-lg ${modelConfig.enabled ? 'text-white' : 'text-slate-800'}`}>
                        {model.name}
                      </h3>
                      <p className={`text-sm ${modelConfig.enabled ? 'text-white/90' : 'text-slate-600'}`}>
                        {model.description}
                      </p>
                    </div>
                    <div>
                      {modelConfig.enabled ? (
                        <Icon name="CheckCircle" size={28} className="text-white" />
                      ) : (
                        <Icon name="Circle" size={28} className="text-slate-300" />
                      )}
                    </div>
                  </div>
                </Card>
              );
            })}
          </div>
        </div>

        <div className="bg-blue-50 border-l-4 border-blue-500 p-4 mb-6 rounded-r-lg">
          <div className="flex items-start gap-3">
            <Icon name="Info" size={20} className="text-blue-600 mt-0.5" />
            <div>
              <h3 className="font-semibold text-blue-900 mb-1">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h3>
              <ul className="text-sm text-blue-800 space-y-1">
                <li>‚Ä¢ <strong>–ö–æ–¥ –∏ –±–∞–≥–∏</strong> ‚Üí Llama (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å)</li>
                <li>‚Ä¢ <strong>–ö—Ä–µ–∞—Ç–∏–≤ –∏ –∏–¥–µ–∏</strong> ‚Üí GigaChat (—Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥)</li>
                <li>‚Ä¢ <strong>–ë—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã</strong> ‚Üí Gemini –∏–ª–∏ Mistral (—Å–∫–æ—Ä–æ—Å—Ç—å)</li>
                <li>‚Ä¢ <strong>–ë–æ–ª—å—à–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç</strong> ‚Üí Llama (–¥–æ 128K —Ç–æ–∫–µ–Ω–æ–≤)</li>
              </ul>
            </div>
          </div>
        </div>

        <Button
          onClick={handleSave}
          disabled={!masterKey.trim() || enabledCount === 0}
          className="w-full h-14 text-base gap-2 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 rounded-xl shadow-lg"
        >
          <Icon name="Save" size={20} />
          <span className="font-semibold">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span>
        </Button>
      </div>
    </div>
  );
}
