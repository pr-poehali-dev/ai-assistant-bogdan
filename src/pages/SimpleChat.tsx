import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';
import SimpleSettings from '@/components/SimpleSettings';
import KnowledgeBasePanel from '@/components/KnowledgeBasePanel';
import { useSimpleChat } from '@/hooks/useSimpleChat';
import { formatDistanceToNow } from 'date-fns';
import { ru } from 'date-fns/locale';

export default function SimpleChat() {
  const {
    messages,
    inputMessage,
    setInputMessage,
    isLoading,
    apiKey,
    setApiKey,
    handleSendMessage,
    clearHistory,
  } = useSimpleChat();

  const [showSettings, setShowSettings] = useState(false);
  const [showCapabilities, setShowCapabilities] = useState(false);
  const [showKnowledgeBase, setShowKnowledgeBase] = useState(false);

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 flex flex-col">
      <header className="bg-white border-b border-slate-200 px-6 py-4 flex items-center justify-between shadow-sm">
        <div className="flex items-center gap-3">
          <div className="w-10 h-10 rounded-xl bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center">
            <Icon name="Sparkles" size={20} className="text-white" />
          </div>
          <div>
            <h1 className="text-xl font-bold text-slate-800">AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</h1>
            <p className="text-xs text-slate-500">–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ OpenRouter</p>
          </div>
        </div>

        <div className="flex gap-2">
          <Button
            variant="outline"
            size="icon"
            onClick={() => setShowKnowledgeBase(true)}
            title="–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π"
          >
            <Icon name="Database" size={18} />
          </Button>
          <Button
            variant="outline"
            size="icon"
            onClick={clearHistory}
            title="–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"
          >
            <Icon name="Trash2" size={18} />
          </Button>
          <Button
            variant="outline"
            size="icon"
            onClick={() => setShowSettings(true)}
            title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ API"
          >
            <Icon name="Settings" size={18} />
          </Button>
        </div>
      </header>

      <div className="flex-1 overflow-y-auto px-4 py-6">
        <div className="max-w-4xl mx-auto space-y-4">
          {messages.length === 1 && (
            <div className="bg-white rounded-2xl p-6 shadow-lg border border-slate-200 mb-6">
              <div className="flex items-center gap-3 mb-4">
                <Icon name="Sparkles" size={24} className="text-blue-600" />
                <h2 className="text-xl font-bold text-slate-800">–ß—Ç–æ —è —É–º–µ—é</h2>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="flex gap-3 p-3 bg-gradient-to-br from-blue-50 to-blue-100 rounded-xl">
                  <Icon name="MessageSquare" size={20} className="text-blue-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–û–±—â–µ–Ω–∏–µ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</h3>
                    <p className="text-sm text-slate-600">–û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—ä—è—Å–Ω—è—é —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl">
                  <Icon name="Code" size={20} className="text-purple-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–ü–æ–º–æ—â—å —Å –∫–æ–¥–æ–º</h3>
                    <p className="text-sm text-slate-600">–ü–∏—à—É, –∏—Å–ø—Ä–∞–≤–ª—è—é –∏ –æ–±—ä—è—Å–Ω—è—é –∫–æ–¥ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-green-50 to-green-100 rounded-xl">
                  <Icon name="FileText" size={20} className="text-green-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤</h3>
                    <p className="text-sm text-slate-600">–ü–æ–º–æ–≥–∞—é –ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç—å–∏, –ø–∏—Å—å–º–∞, —Ä–µ–∑—é–º–µ –∏ –¥—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç—ã</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-orange-50 to-orange-100 rounded-xl">
                  <Icon name="Lightbulb" size={20} className="text-orange-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π</h3>
                    <p className="text-sm text-slate-600">–ü–æ–º–æ–≥–∞—é –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-pink-50 to-pink-100 rounded-xl">
                  <Icon name="Languages" size={20} className="text-pink-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤</h3>
                    <p className="text-sm text-slate-600">–ü–µ—Ä–µ–≤–æ–∂—É –º–µ–∂–¥—É —è–∑—ã–∫–∞–º–∏ –∏ –ø–æ–º–æ–≥–∞—é —Å –∏–∑—É—á–µ–Ω–∏–µ–º</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-indigo-50 to-indigo-100 rounded-xl">
                  <Icon name="Calculator" size={20} className="text-indigo-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á</h3>
                    <p className="text-sm text-slate-600">–ü–æ–º–æ–≥–∞—é —Å –º–∞—Ç–µ–º–∞—Ç–∏–∫–æ–π, –ª–æ–≥–∏–∫–æ–π –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-rose-50 to-rose-100 rounded-xl">
                  <Icon name="BookOpen" size={20} className="text-rose-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–û–±—É—á–µ–Ω–∏–µ</h3>
                    <p className="text-sm text-slate-600">–û–±—ä—è—Å–Ω—è—é –Ω–æ–≤—ã–µ —Ç–µ–º—ã, –ø–æ–º–æ–≥–∞—é –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º</p>
                  </div>
                </div>

                <div className="flex gap-3 p-3 bg-gradient-to-br from-teal-50 to-teal-100 rounded-xl">
                  <Icon name="Search" size={20} className="text-teal-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h3 className="font-semibold text-slate-800 mb-1">–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</h3>
                    <p className="text-sm text-slate-600">–ù–∞—Ö–æ–∂—É –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É</p>
                  </div>
                </div>
              </div>

              <div className="mt-6 p-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl text-white">
                <p className="text-sm font-medium mb-2">üí° –°–æ–≤–µ—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:</p>
                <p className="text-sm opacity-90">–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ! –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö AI-–º–æ–¥–µ–ª—è—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä—É –ª—É—á—à—É—é –¥–ª—è –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</p>
              </div>
            </div>
          )}

          {messages.map((message) => (
            <div
              key={message.id}
              className={`flex gap-3 ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
            >
              {message.role === 'assistant' && (
                <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center flex-shrink-0">
                  <Icon name="Bot" size={16} className="text-white" />
                </div>
              )}
              <div
                className={`rounded-2xl px-4 py-3 max-w-[80%] ${
                  message.role === 'user'
                    ? 'bg-blue-600 text-white'
                    : 'bg-white border border-slate-200 text-slate-800'
                }`}
              >
                <p className="text-sm whitespace-pre-wrap">{message.content}</p>
                <p
                  className={`text-xs mt-2 ${
                    message.role === 'user' ? 'text-blue-100' : 'text-slate-400'
                  }`}
                >
                  {formatDistanceToNow(message.timestamp, { addSuffix: true, locale: ru })}
                </p>
              </div>
              {message.role === 'user' && (
                <div className="w-8 h-8 rounded-lg bg-blue-600 flex items-center justify-center flex-shrink-0">
                  <Icon name="User" size={16} className="text-white" />
                </div>
              )}
            </div>
          ))}

          {isLoading && (
            <div className="flex gap-3">
              <div className="w-8 h-8 rounded-lg bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center">
                <Icon name="Bot" size={16} className="text-white" />
              </div>
              <div className="bg-white border border-slate-200 rounded-2xl px-4 py-3">
                <div className="flex gap-2">
                  <div className="w-2 h-2 bg-slate-400 rounded-full animate-bounce"></div>
                  <div className="w-2 h-2 bg-slate-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                  <div className="w-2 h-2 bg-slate-400 rounded-full animate-bounce" style={{ animationDelay: '0.4s' }}></div>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>

      <div className="bg-white border-t border-slate-200 px-4 py-4">
        <div className="max-w-4xl mx-auto flex gap-3">
          <Textarea
            value={inputMessage}
            onChange={(e) => setInputMessage(e.target.value)}
            onKeyDown={handleKeyPress}
            placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            className="resize-none min-h-[60px]"
            disabled={isLoading}
          />
          <Button
            onClick={handleSendMessage}
            disabled={isLoading || !inputMessage.trim()}
            className="h-[60px] px-6 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
          >
            <Icon name="Send" size={20} />
          </Button>
        </div>
      </div>

      {showSettings && (
        <SimpleSettings
          apiKey={apiKey}
          onApiKeyChange={setApiKey}
          onClose={() => setShowSettings(false)}
        />
      )}

      {showKnowledgeBase && (
        <KnowledgeBasePanel
          userId="default"
          onClose={() => setShowKnowledgeBase(false)}
        />
      )}
    </div>
  );
}